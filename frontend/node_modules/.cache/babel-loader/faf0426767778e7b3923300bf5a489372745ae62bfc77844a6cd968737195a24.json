{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BlocklyWorkspace}from'react-blockly';import*as Blockly from'blockly/core';import{pythonGenerator}from'blockly/python';import Editor from'@monaco-editor/react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const INITIAL_TOOLBOX_JSON={\"kind\":\"categoryToolbox\",\"contents\":[{\"kind\":\"category\",\"name\":\"Logic\",\"colour\":\"%{BKY_LOGIC_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_if\"},{\"kind\":\"block\",\"type\":\"logic_compare\"},{\"kind\":\"block\",\"type\":\"logic_operation\"},{\"kind\":\"block\",\"type\":\"logic_negate\"}]},{\"kind\":\"category\",\"name\":\"Loops\",\"colour\":\"%{BKY_LOOPS_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_repeat_ext\"},{\"kind\":\"block\",\"type\":\"controls_whileUntil\"},{\"kind\":\"block\",\"type\":\"controls_for\"}]},{\"kind\":\"category\",\"name\":\"Math\",\"colour\":\"%{BKY_MATH_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"math_number\"},{\"kind\":\"block\",\"type\":\"math_arithmetic\"},{\"kind\":\"block\",\"type\":\"math_single\"}]},{\"kind\":\"category\",\"name\":\"Text\",\"colour\":\"%{BKY_TEXTS_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"text\"},{\"kind\":\"block\",\"type\":\"text_print\"},{\"kind\":\"block\",\"type\":\"text_join\"}]},{\"kind\":\"category\",\"name\":\"Lists\",\"colour\":\"%{BKY_LISTS_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"lists_create_empty\"},{\"kind\":\"block\",\"type\":\"lists_create_with\"},{\"kind\":\"block\",\"type\":\"lists_repeat\"},{\"kind\":\"block\",\"type\":\"lists_length\"},{\"kind\":\"block\",\"type\":\"lists_getIndex\"},{\"kind\":\"block\",\"type\":\"lists_setIndex\"}]},{\"kind\":\"category\",\"name\":\"Variables\",\"custom\":\"VARIABLE\",\"colour\":\"%{BKY_VARIABLES_HUE}\"},{\"kind\":\"category\",\"name\":\"Functions\",\"custom\":\"PROCEDURE\",\"colour\":\"%{BKY_PROCEDURES_HUE}\"}]};function App(){const[pythonCode,setPythonCode]=useState('');const[blocklyWorkspace,setBlocklyWorkspace]=useState(null);const[output,setOutput]=useState('');useEffect(()=>{if(blocklyWorkspace){const updateCode=()=>{const code=pythonGenerator.workspaceToCode(blocklyWorkspace);setPythonCode(code);};blocklyWorkspace.addChangeListener(updateCode);return()=>{blocklyWorkspace.removeChangeListener(updateCode);};}},[blocklyWorkspace]);const handleWorkspaceChange=workspace=>{setBlocklyWorkspace(workspace);};const handleRunCode=async()=>{try{const response=await fetch('http://localhost:5000/run',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({code:pythonCode})});const result=await response.json();if(result.error){setOutput('Error: '+result.error);}else{setOutput(result.output||'No output');}}catch(error){setOutput('Error running code: '+error.message);}};const handleSaveBlocks=()=>{try{if(blocklyWorkspace){const xml=Blockly.serialization.workspaces.save(blocklyWorkspace);const xmlStr=JSON.stringify(xml,null,2);const blob=new Blob([xmlStr],{type:'application/json'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.download='blocks.json';link.href=url;link.click();URL.revokeObjectURL(url);}}catch(error){console.error('Error saving blocks:',error);setOutput('Error saving blocks: '+error.message);}};const handleLoadBlocks=event=>{const file=event.target.files[0];if(file&&blocklyWorkspace){const reader=new FileReader();reader.onload=e=>{try{const json=JSON.parse(e.target.result);Blockly.serialization.workspaces.load(json,blocklyWorkspace);}catch(error){console.error('Error loading blocks:',error);setOutput('Error loading blocks: '+error.message);}};reader.readAsText(file);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleRunCode,children:\"Run Code\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveBlocks,children:\"Save Blocks\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".json\",onChange:handleLoadBlocks,style:{display:'none'},id:\"load-blocks\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"load-blocks\",className:\"button\",children:\"Load Blocks\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"blockly-container\",children:/*#__PURE__*/_jsx(BlocklyWorkspace,{toolboxConfiguration:INITIAL_TOOLBOX_JSON,initialXml:\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"></xml>\",className:\"blockly-editor\",onWorkspaceChange:handleWorkspaceChange,workspaceConfiguration:{grid:{spacing:20,length:3,colour:'#ccc',snap:true},zoom:{controls:true,wheel:true,startScale:1.0,maxScale:3,minScale:0.3,scaleSpeed:1.2},trashcan:true}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"right-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"code-container\",children:/*#__PURE__*/_jsx(Editor,{height:\"70%\",defaultLanguage:\"python\",value:pythonCode,theme:\"vs-dark\",options:{readOnly:true,minimap:{enabled:true},fontSize:14,automaticLayout:true}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"output-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Output:\"}),/*#__PURE__*/_jsx(\"pre\",{children:output})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BlocklyWorkspace","Blockly","pythonGenerator","Editor","jsx","_jsx","jsxs","_jsxs","INITIAL_TOOLBOX_JSON","App","pythonCode","setPythonCode","blocklyWorkspace","setBlocklyWorkspace","output","setOutput","updateCode","code","workspaceToCode","addChangeListener","removeChangeListener","handleWorkspaceChange","workspace","handleRunCode","response","fetch","method","headers","body","JSON","stringify","result","json","error","message","handleSaveBlocks","xml","serialization","workspaces","save","xmlStr","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","download","href","click","revokeObjectURL","console","handleLoadBlocks","event","file","target","files","reader","FileReader","onload","e","parse","load","readAsText","className","children","onClick","accept","onChange","style","display","id","htmlFor","toolboxConfiguration","initialXml","onWorkspaceChange","workspaceConfiguration","grid","spacing","length","colour","snap","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","trashcan","height","defaultLanguage","value","theme","options","readOnly","minimap","enabled","fontSize","automaticLayout"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/pi_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BlocklyWorkspace } from 'react-blockly';\r\nimport * as Blockly from 'blockly/core';\r\nimport { pythonGenerator } from 'blockly/python';\r\nimport Editor from '@monaco-editor/react';\r\nimport './App.css';\r\n\r\nconst INITIAL_TOOLBOX_JSON = {\r\n  \"kind\": \"categoryToolbox\",\r\n  \"contents\": [\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Logic\",\r\n      \"colour\": \"%{BKY_LOGIC_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_if\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_compare\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_operation\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_negate\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Loops\",\r\n      \"colour\": \"%{BKY_LOOPS_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_repeat_ext\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_whileUntil\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_for\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Math\",\r\n      \"colour\": \"%{BKY_MATH_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"math_number\" },\r\n        { \"kind\": \"block\", \"type\": \"math_arithmetic\" },\r\n        { \"kind\": \"block\", \"type\": \"math_single\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Text\",\r\n      \"colour\": \"%{BKY_TEXTS_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"text\" },\r\n        { \"kind\": \"block\", \"type\": \"text_print\" },\r\n        { \"kind\": \"block\", \"type\": \"text_join\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Lists\",\r\n      \"colour\": \"%{BKY_LISTS_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"lists_create_empty\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_create_with\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_repeat\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_length\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_getIndex\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_setIndex\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Variables\",\r\n      \"custom\": \"VARIABLE\",\r\n      \"colour\": \"%{BKY_VARIABLES_HUE}\"\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Functions\",\r\n      \"custom\": \"PROCEDURE\",\r\n      \"colour\": \"%{BKY_PROCEDURES_HUE}\"\r\n    }\r\n  ]\r\n};\r\n\r\nfunction App() {\r\n  const [pythonCode, setPythonCode] = useState('');\r\n  const [blocklyWorkspace, setBlocklyWorkspace] = useState(null);\r\n  const [output, setOutput] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (blocklyWorkspace) {\r\n      const updateCode = () => {\r\n        const code = pythonGenerator.workspaceToCode(blocklyWorkspace);\r\n        setPythonCode(code);\r\n      };\r\n\r\n      blocklyWorkspace.addChangeListener(updateCode);\r\n      return () => {\r\n        blocklyWorkspace.removeChangeListener(updateCode);\r\n      };\r\n    }\r\n  }, [blocklyWorkspace]);\r\n\r\n  const handleWorkspaceChange = (workspace) => {\r\n    setBlocklyWorkspace(workspace);\r\n  };\r\n\r\n  const handleRunCode = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/run', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ code: pythonCode }),\r\n      });\r\n      \r\n      const result = await response.json();\r\n      if (result.error) {\r\n        setOutput('Error: ' + result.error);\r\n      } else {\r\n        setOutput(result.output || 'No output');\r\n      }\r\n    } catch (error) {\r\n      setOutput('Error running code: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleSaveBlocks = () => {\r\n    try {\r\n      if (blocklyWorkspace) {\r\n        const xml = Blockly.serialization.workspaces.save(blocklyWorkspace);\r\n        const xmlStr = JSON.stringify(xml, null, 2);\r\n        \r\n        const blob = new Blob([xmlStr], { type: 'application/json' });\r\n        const url = URL.createObjectURL(blob);\r\n        \r\n        const link = document.createElement('a');\r\n        link.download = 'blocks.json';\r\n        link.href = url;\r\n        link.click();\r\n        \r\n        URL.revokeObjectURL(url);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving blocks:', error);\r\n      setOutput('Error saving blocks: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleLoadBlocks = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && blocklyWorkspace) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const json = JSON.parse(e.target.result);\r\n          Blockly.serialization.workspaces.load(json, blocklyWorkspace);\r\n        } catch (error) {\r\n          console.error('Error loading blocks:', error);\r\n          setOutput('Error loading blocks: ' + error.message);\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"toolbar\">\r\n        <button onClick={handleRunCode}>Run Code</button>\r\n        <button onClick={handleSaveBlocks}>Save Blocks</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".json\"\r\n          onChange={handleLoadBlocks}\r\n          style={{ display: 'none' }}\r\n          id=\"load-blocks\"\r\n        />\r\n        <label htmlFor=\"load-blocks\" className=\"button\">\r\n          Load Blocks\r\n        </label>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"blockly-container\">\r\n          <BlocklyWorkspace\r\n            toolboxConfiguration={INITIAL_TOOLBOX_JSON}\r\n            initialXml='<xml xmlns=\"https://developers.google.com/blockly/xml\"></xml>'\r\n            className=\"blockly-editor\"\r\n            onWorkspaceChange={handleWorkspaceChange}\r\n            workspaceConfiguration={{\r\n              grid: {\r\n                spacing: 20,\r\n                length: 3,\r\n                colour: '#ccc',\r\n                snap: true,\r\n              },\r\n              zoom: {\r\n                controls: true,\r\n                wheel: true,\r\n                startScale: 1.0,\r\n                maxScale: 3,\r\n                minScale: 0.3,\r\n                scaleSpeed: 1.2\r\n              },\r\n              trashcan: true\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <div className=\"code-container\">\r\n            <Editor\r\n              height=\"70%\"\r\n              defaultLanguage=\"python\"\r\n              value={pythonCode}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                readOnly: true,\r\n                minimap: { enabled: true },\r\n                fontSize: 14,\r\n                automaticLayout: true\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"output-container\">\r\n            <h3>Output:</h3>\r\n            <pre>{output}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}