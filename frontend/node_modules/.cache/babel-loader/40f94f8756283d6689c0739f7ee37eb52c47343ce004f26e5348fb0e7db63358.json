{"ast":null,"code":"import Blockly from'blockly/core';import'blockly/blocks';import{pythonGenerator}from'blockly/python';Blockly.Blocks['RGB_start']={init:function(){this.appendDummyInput().appendField(\"Start RGB LED\");this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(Blockly.Msg['LOGIC_HUE']);this.setTooltip(\"Start RGB LED\");}};Blockly.Blocks['RGB_stop']={init:function(){this.appendDummyInput().appendField(\"Stop RGB LED\");this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(Blockly.Msg['LOGIC_HUE']);this.setTooltip(\"Stop RGB LED\");}};Blockly.Blocks['RGB_color']={init:function(){this.appendValueInput('RED').setCheck('Number').appendField(\"Set RGB Color (R\");this.appendValueInput('GREEN').setCheck('Number').appendField(\"G\");this.appendValueInput('BLUE').setCheck('Number').appendField(\"B)\");this.appendDummyInput().appendField(\")\");this.setInputsInline(true);this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(Blockly.Msg['LOGIC_HUE']);this.setTooltip(\"Set RGB color (0-255 for each component)\");}};pythonGenerator.forBlock['RGB_start']=function(block){// Add import RGB to definitions\npythonGenerator.definitions_['import_RGB']='import RGB';return`RGB.start()\\n`;};pythonGenerator.forBlock['RGB_stop']=function(block){// Add import RGB to definitions\npythonGenerator.definitions_['import_RGB']='import RGB';return`RGB.stop()\\n`;};pythonGenerator.forBlock['RGB_color']=function(block){// Add import RGB to definitions\npythonGenerator.definitions_['import_RGB']='import RGB';var red=pythonGenerator.valueToCode(block,'RED',pythonGenerator.ORDER_ATOMIC)||'0';var green=pythonGenerator.valueToCode(block,'GREEN',pythonGenerator.ORDER_ATOMIC)||'0';var blue=pythonGenerator.valueToCode(block,'BLUE',pythonGenerator.ORDER_ATOMIC)||'0';return`RGB.color(${red}, ${green}, ${blue})\\n`;};","map":{"version":3,"names":["Blockly","pythonGenerator","Blocks","init","appendDummyInput","appendField","setPreviousStatement","setNextStatement","setColour","Msg","setTooltip","appendValueInput","setCheck","setInputsInline","forBlock","block","definitions_","red","valueToCode","ORDER_ATOMIC","green","blue"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/STEM_KIT_app/frontend/src/blocks/RGB_blocks.js"],"sourcesContent":["import Blockly from 'blockly/core';\r\nimport 'blockly/blocks';\r\nimport { pythonGenerator } from 'blockly/python';\r\n\r\nBlockly.Blocks['RGB_start'] = {\r\n  init: function() {\r\n    this.appendDummyInput()\r\n        .appendField(\"Start RGB LED\");\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(Blockly.Msg['LOGIC_HUE']);\r\n    this.setTooltip(\"Start RGB LED\");\r\n  }\r\n};\r\n\r\nBlockly.Blocks['RGB_stop'] = {\r\n  init: function() {\r\n    this.appendDummyInput()\r\n        .appendField(\"Stop RGB LED\");\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(Blockly.Msg['LOGIC_HUE']);\r\n    this.setTooltip(\"Stop RGB LED\");\r\n  }\r\n};\r\n\r\nBlockly.Blocks['RGB_color'] = {\r\n  init: function() {\r\n    this.appendValueInput('RED')\r\n        .setCheck('Number')\r\n        .appendField(\"Set RGB Color (R\");\r\n    this.appendValueInput('GREEN')\r\n        .setCheck('Number')\r\n        .appendField(\"G\");\r\n    this.appendValueInput('BLUE')\r\n        .setCheck('Number')\r\n        .appendField(\"B)\");\r\n    this.appendDummyInput()\r\n        .appendField(\")\");\r\n    this.setInputsInline(true);\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(Blockly.Msg['LOGIC_HUE']);\r\n    this.setTooltip(\"Set RGB color (0-255 for each component)\");\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['RGB_start'] = function(block) {\r\n\r\n  // Add import RGB to definitions\r\n  pythonGenerator.definitions_['import_RGB'] = 'import RGB';\r\n  return `RGB.start()\\n`;\r\n};\r\n\r\npythonGenerator.forBlock['RGB_stop'] = function(block) {\r\n  // Add import RGB to definitions\r\n  pythonGenerator.definitions_['import_RGB'] = 'import RGB';\r\n  return `RGB.stop()\\n`;\r\n};\r\n\r\npythonGenerator.forBlock['RGB_color'] = function(block) {\r\n  // Add import RGB to definitions\r\n  pythonGenerator.definitions_['import_RGB'] = 'import RGB';\r\n  var red = pythonGenerator.valueToCode(block, 'RED', pythonGenerator.ORDER_ATOMIC) || '0';\r\n  var green = pythonGenerator.valueToCode(block, 'GREEN', pythonGenerator.ORDER_ATOMIC) || '0';\r\n  var blue = pythonGenerator.valueToCode(block, 'BLUE', pythonGenerator.ORDER_ATOMIC) || '0';\r\n  return `RGB.color(${red}, ${green}, ${blue})\\n`;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}