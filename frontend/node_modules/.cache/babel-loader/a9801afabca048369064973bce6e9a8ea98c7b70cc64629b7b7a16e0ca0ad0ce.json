{"ast":null,"code":"import Blockly from'blockly/core';import'blockly/blocks';import{pythonGenerator}from'blockly/python';Blockly.Blocks['dictionaries_create']={init:function(){this.appendValueInput('KEY').setCheck('String').appendField('create dictionary with key');this.appendValueInput('VALUE').setCheck(null).appendField('and value');this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(160);this.setTooltip('Create a dictionary with the given key and value');}};pythonGenerator.forBlock['dictionaries_create']=function(block){const key=pythonGenerator.valueToCode(block,'KEY',pythonGenerator.ORDER_ATOMIC)||'\"\"';const value=pythonGenerator.valueToCode(block,'VALUE',pythonGenerator.ORDER_ATOMIC)||'None';return`dictionary = {${key}: ${value}}\\n`;};","map":{"version":3,"names":["Blockly","pythonGenerator","Blocks","init","appendValueInput","setCheck","appendField","setPreviousStatement","setNextStatement","setColour","setTooltip","forBlock","block","key","valueToCode","ORDER_ATOMIC","value"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/STEM_KIT_app/frontend/src/blocks/dictionaries_blocks.js"],"sourcesContent":["import Blockly from 'blockly/core';\r\nimport 'blockly/blocks';\r\nimport { pythonGenerator } from 'blockly/python';\r\n\r\nBlockly.Blocks['dictionaries_create'] = {\r\n  init: function() {\r\n    this.appendValueInput('KEY')\r\n        .setCheck('String')\r\n        .appendField('create dictionary with key');\r\n    this.appendValueInput('VALUE')\r\n        .setCheck(null)\r\n        .appendField('and value');\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(160);\r\n    this.setTooltip('Create a dictionary with the given key and value');\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['dictionaries_create'] = function(block) {\r\n  const key = pythonGenerator.valueToCode(block, 'KEY', pythonGenerator.ORDER_ATOMIC) || '\"\"';\r\n  const value = pythonGenerator.valueToCode(block, 'VALUE', pythonGenerator.ORDER_ATOMIC) || 'None';\r\n  return `dictionary = {${key}: ${value}}\\n`;\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,cAAc,CAClC,MAAO,gBAAgB,CACvB,OAASC,eAAe,KAAQ,gBAAgB,CAEhDD,OAAO,CAACE,MAAM,CAAC,qBAAqB,CAAC,CAAG,CACtCC,IAAI,CAAE,QAAAA,CAAA,CAAW,CACf,IAAI,CAACC,gBAAgB,CAAC,KAAK,CAAC,CACvBC,QAAQ,CAAC,QAAQ,CAAC,CAClBC,WAAW,CAAC,4BAA4B,CAAC,CAC9C,IAAI,CAACF,gBAAgB,CAAC,OAAO,CAAC,CACzBC,QAAQ,CAAC,IAAI,CAAC,CACdC,WAAW,CAAC,WAAW,CAAC,CAC7B,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAAE,IAAI,CAAC,CACrC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAE,IAAI,CAAC,CACjC,IAAI,CAACC,SAAS,CAAC,GAAG,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,kDAAkD,CAAC,CACrE,CACF,CAAC,CAEDT,eAAe,CAACU,QAAQ,CAAC,qBAAqB,CAAC,CAAG,SAASC,KAAK,CAAE,CAChE,KAAM,CAAAC,GAAG,CAAGZ,eAAe,CAACa,WAAW,CAACF,KAAK,CAAE,KAAK,CAAEX,eAAe,CAACc,YAAY,CAAC,EAAI,IAAI,CAC3F,KAAM,CAAAC,KAAK,CAAGf,eAAe,CAACa,WAAW,CAACF,KAAK,CAAE,OAAO,CAAEX,eAAe,CAACc,YAAY,CAAC,EAAI,MAAM,CACjG,MAAO,iBAAiBF,GAAG,KAAKG,KAAK,KAAK,CAC5C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}