{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BlocklyWorkspace}from'react-blockly';import*as Blockly from'blockly/core';import'blockly/blocks';import{pythonGenerator}from'blockly/python';import Editor from'@monaco-editor/react';import'./App.css';// Định nghĩa màu sắc cho các khối\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Blockly.HSV_SATURATION=0.45;Blockly.HSV_VALUE=0.65;const INITIAL_TOOLBOX_JSON={\"kind\":\"categoryToolbox\",\"contents\":[{\"kind\":\"category\",\"name\":\"Logic\",\"categorystyle\":\"logic_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_if\"},{\"kind\":\"block\",\"type\":\"logic_compare\"},{\"kind\":\"block\",\"type\":\"logic_operation\"},{\"kind\":\"block\",\"type\":\"logic_negate\"}]},{\"kind\":\"category\",\"name\":\"Loops\",\"categorystyle\":\"loop_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_repeat_ext\"},{\"kind\":\"block\",\"type\":\"controls_whileUntil\"},{\"kind\":\"block\",\"type\":\"controls_for\"}]},{\"kind\":\"category\",\"name\":\"Math\",\"categorystyle\":\"math_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"math_number\"},{\"kind\":\"block\",\"type\":\"math_arithmetic\"},{\"kind\":\"block\",\"type\":\"math_single\"}]},{\"kind\":\"category\",\"name\":\"Text\",\"categorystyle\":\"text_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"text\"},{\"kind\":\"block\",\"type\":\"text_print\"},{\"kind\":\"block\",\"type\":\"text_join\"}]},{\"kind\":\"category\",\"name\":\"Lists\",\"categorystyle\":\"list_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"lists_create_empty\"},{\"kind\":\"block\",\"type\":\"lists_create_with\"},{\"kind\":\"block\",\"type\":\"lists_repeat\"},{\"kind\":\"block\",\"type\":\"lists_length\"},{\"kind\":\"block\",\"type\":\"lists_getIndex\"},{\"kind\":\"block\",\"type\":\"lists_setIndex\"}]},{\"kind\":\"category\",\"name\":\"Variables\",\"categorystyle\":\"variable_category\",\"custom\":\"VARIABLE\"},{\"kind\":\"category\",\"name\":\"Functions\",\"categorystyle\":\"procedure_category\",\"custom\":\"PROCEDURE\"}]};// Định nghĩa theme cho Blockly\nconst blocklyTheme=Blockly.Theme.defineTheme('custom',{'base':Blockly.Themes.Classic,'componentStyles':{'workspaceBackgroundColour':'#ffffff','toolboxBackgroundColour':'#f0f0f0','toolboxForegroundColour':'#333','flyoutBackgroundColour':'#eee','flyoutForegroundColour':'#444','scrollbarColour':'#ccc','insertionMarkerColour':'#fff','insertionMarkerOpacity':0.3,'scrollbarOpacity':0.4,'cursorColour':'#d0d0d0'},'categoryStyles':{'logic_category':{'colour':'210'},'loop_category':{'colour':'120'},'math_category':{'colour':'230'},'text_category':{'colour':'160'},'list_category':{'colour':'260'},'variable_category':{'colour':'330'},'procedure_category':{'colour':'290'}}});function App(){const[pythonCode,setPythonCode]=useState('');const[blocklyWorkspace,setBlocklyWorkspace]=useState(null);const[output,setOutput]=useState('');const[isEditorReady,setIsEditorReady]=useState(false);useEffect(()=>{if(blocklyWorkspace){const updateCode=()=>{try{const code=pythonGenerator.workspaceToCode(blocklyWorkspace);setPythonCode(code);}catch(error){console.error('Error generating code:',error);setOutput('Error generating code: '+error.message);}};blocklyWorkspace.addChangeListener(updateCode);return()=>{blocklyWorkspace.removeChangeListener(updateCode);};}},[blocklyWorkspace]);const handleWorkspaceChange=workspace=>{setBlocklyWorkspace(workspace);};const handleRunCode=async()=>{try{const response=await fetch('http://localhost:5000/run',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({code:pythonCode})});const result=await response.json();if(result.error){setOutput('Error: '+result.error);}else{setOutput(result.output||'No output');}}catch(error){setOutput('Error running code: '+error.message);}};const handleSaveBlocks=async()=>{try{if(blocklyWorkspace){const xml=Blockly.serialization.workspaces.save(blocklyWorkspace);const xmlStr=JSON.stringify(xml,null,2);const response=await fetch('http://localhost:5000/save',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({content:xmlStr})});const result=await response.json();if(result.error){setOutput('Error saving blocks: '+result.error);}else{setOutput('Blocks saved successfully to: '+result.path);}}}catch(error){console.error('Error saving blocks:',error);setOutput('Error saving blocks: '+error.message);}};const handleLoadBlocks=event=>{const file=event.target.files[0];if(file&&blocklyWorkspace){const reader=new FileReader();reader.onload=e=>{try{const json=JSON.parse(e.target.result);Blockly.serialization.workspaces.load(json,blocklyWorkspace);}catch(error){console.error('Error loading blocks:',error);setOutput('Error loading blocks: '+error.message);}};reader.readAsText(file);}};const handleEditorDidMount=()=>{setIsEditorReady(true);};const handleEditorWillMount=monaco=>{monaco.editor.defineTheme('customTheme',{base:'vs-dark',inherit:true,rules:[],colors:{}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleRunCode,children:\"Run Code\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveBlocks,children:\"Save Blocks\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".json\",onChange:handleLoadBlocks,style:{display:'none'},id:\"load-blocks\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"load-blocks\",className:\"button\",children:\"Load Blocks\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"blockly-container\",children:/*#__PURE__*/_jsx(BlocklyWorkspace,{toolboxConfiguration:INITIAL_TOOLBOX_JSON,initialXml:\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"></xml>\",className:\"blockly-editor\",onWorkspaceChange:handleWorkspaceChange,workspaceConfiguration:{grid:{spacing:20,length:3,colour:'#ccc',snap:true},zoom:{controls:true,wheel:true,startScale:1.0,maxScale:2,minScale:0.4,scaleSpeed:1.1},trashcan:true,renderer:'geras',move:{drag:true,wheel:true},theme:blocklyTheme}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"right-panel\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"code-container\",children:/*#__PURE__*/_jsx(Editor,{height:\"100%\",defaultLanguage:\"python\",value:pythonCode||'# Your Python code will appear here',loading:/*#__PURE__*/_jsx(\"div\",{className:\"editor-loading\",children:\"Loading editor...\"}),beforeMount:handleEditorWillMount,onMount:handleEditorDidMount,options:{readOnly:true,minimap:{enabled:false},fontSize:14,wordWrap:'on',theme:'vs-dark'},path:\"model://python\",defaultPath:\"model://python\",keepCurrentModel:true})}),/*#__PURE__*/_jsxs(\"div\",{className:\"output-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Output:\"}),/*#__PURE__*/_jsx(\"pre\",{children:output})]})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BlocklyWorkspace","Blockly","pythonGenerator","Editor","jsx","_jsx","jsxs","_jsxs","HSV_SATURATION","HSV_VALUE","INITIAL_TOOLBOX_JSON","blocklyTheme","Theme","defineTheme","Themes","Classic","App","pythonCode","setPythonCode","blocklyWorkspace","setBlocklyWorkspace","output","setOutput","isEditorReady","setIsEditorReady","updateCode","code","workspaceToCode","error","console","message","addChangeListener","removeChangeListener","handleWorkspaceChange","workspace","handleRunCode","response","fetch","method","headers","body","JSON","stringify","result","json","handleSaveBlocks","xml","serialization","workspaces","save","xmlStr","content","path","handleLoadBlocks","event","file","target","files","reader","FileReader","onload","e","parse","load","readAsText","handleEditorDidMount","handleEditorWillMount","monaco","editor","base","inherit","rules","colors","className","children","onClick","type","accept","onChange","style","display","id","htmlFor","toolboxConfiguration","initialXml","onWorkspaceChange","workspaceConfiguration","grid","spacing","length","colour","snap","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","trashcan","renderer","move","drag","theme","height","defaultLanguage","value","loading","beforeMount","onMount","options","readOnly","minimap","enabled","fontSize","wordWrap","defaultPath","keepCurrentModel"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/pi_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BlocklyWorkspace } from 'react-blockly';\r\nimport * as Blockly from 'blockly/core';\r\nimport 'blockly/blocks';\r\nimport { pythonGenerator } from 'blockly/python';\r\nimport Editor from '@monaco-editor/react';\r\nimport './App.css';\r\n\r\n// Định nghĩa màu sắc cho các khối\r\nBlockly.HSV_SATURATION = 0.45;\r\nBlockly.HSV_VALUE = 0.65;\r\n\r\nconst INITIAL_TOOLBOX_JSON = {\r\n  \"kind\": \"categoryToolbox\",\r\n  \"contents\": [\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Logic\",\r\n      \"categorystyle\": \"logic_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_if\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_compare\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_operation\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_negate\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Loops\",\r\n      \"categorystyle\": \"loop_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_repeat_ext\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_whileUntil\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_for\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Math\",\r\n      \"categorystyle\": \"math_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"math_number\" },\r\n        { \"kind\": \"block\", \"type\": \"math_arithmetic\" },\r\n        { \"kind\": \"block\", \"type\": \"math_single\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Text\",\r\n      \"categorystyle\": \"text_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"text\" },\r\n        { \"kind\": \"block\", \"type\": \"text_print\" },\r\n        { \"kind\": \"block\", \"type\": \"text_join\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Lists\",\r\n      \"categorystyle\": \"list_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"lists_create_empty\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_create_with\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_repeat\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_length\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_getIndex\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_setIndex\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Variables\",\r\n      \"categorystyle\": \"variable_category\",\r\n      \"custom\": \"VARIABLE\"\r\n    },\r\n    {\r\n      \"kind\": \"category\", \r\n      \"name\": \"Functions\",\r\n      \"categorystyle\": \"procedure_category\",\r\n      \"custom\": \"PROCEDURE\"\r\n    }\r\n  ]\r\n};\r\n\r\n// Định nghĩa theme cho Blockly\r\nconst blocklyTheme = Blockly.Theme.defineTheme('custom', {\r\n  'base': Blockly.Themes.Classic,\r\n  'componentStyles': {\r\n    'workspaceBackgroundColour': '#ffffff',\r\n    'toolboxBackgroundColour': '#f0f0f0',\r\n    'toolboxForegroundColour': '#333',\r\n    'flyoutBackgroundColour': '#eee',\r\n    'flyoutForegroundColour': '#444',\r\n    'scrollbarColour': '#ccc',\r\n    'insertionMarkerColour': '#fff',\r\n    'insertionMarkerOpacity': 0.3,\r\n    'scrollbarOpacity': 0.4,\r\n    'cursorColour': '#d0d0d0'\r\n  },\r\n  'categoryStyles': {\r\n    'logic_category': { 'colour': '210' },\r\n    'loop_category': { 'colour': '120' },\r\n    'math_category': { 'colour': '230' },\r\n    'text_category': { 'colour': '160' },\r\n    'list_category': { 'colour': '260' },\r\n    'variable_category': { 'colour': '330' },\r\n    'procedure_category': { 'colour': '290' }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const [pythonCode, setPythonCode] = useState('');\r\n  const [blocklyWorkspace, setBlocklyWorkspace] = useState(null);\r\n  const [output, setOutput] = useState('');\r\n  const [isEditorReady, setIsEditorReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (blocklyWorkspace) {\r\n      const updateCode = () => {\r\n        try {\r\n          const code = pythonGenerator.workspaceToCode(blocklyWorkspace);\r\n          setPythonCode(code);\r\n        } catch (error) {\r\n          console.error('Error generating code:', error);\r\n          setOutput('Error generating code: ' + error.message);\r\n        }\r\n      };\r\n\r\n      blocklyWorkspace.addChangeListener(updateCode);\r\n      return () => {\r\n        blocklyWorkspace.removeChangeListener(updateCode);\r\n      };\r\n    }\r\n  }, [blocklyWorkspace]);\r\n\r\n  const handleWorkspaceChange = (workspace) => {\r\n    setBlocklyWorkspace(workspace);\r\n  };\r\n\r\n  const handleRunCode = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/run', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ code: pythonCode }),\r\n      });\r\n      \r\n      const result = await response.json();\r\n      if (result.error) {\r\n        setOutput('Error: ' + result.error);\r\n      } else {\r\n        setOutput(result.output || 'No output');\r\n      }\r\n    } catch (error) {\r\n      setOutput('Error running code: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleSaveBlocks = async () => {\r\n    try {\r\n      if (blocklyWorkspace) {\r\n        const xml = Blockly.serialization.workspaces.save(blocklyWorkspace);\r\n        const xmlStr = JSON.stringify(xml, null, 2);\r\n        \r\n        const response = await fetch('http://localhost:5000/save', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ content: xmlStr }),\r\n        });\r\n        \r\n        const result = await response.json();\r\n        if (result.error) {\r\n          setOutput('Error saving blocks: ' + result.error);\r\n        } else {\r\n          setOutput('Blocks saved successfully to: ' + result.path);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving blocks:', error);\r\n      setOutput('Error saving blocks: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleLoadBlocks = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && blocklyWorkspace) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const json = JSON.parse(e.target.result);\r\n          Blockly.serialization.workspaces.load(json, blocklyWorkspace);\r\n        } catch (error) {\r\n          console.error('Error loading blocks:', error);\r\n          setOutput('Error loading blocks: ' + error.message);\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  const handleEditorDidMount = () => {\r\n    setIsEditorReady(true);\r\n  };\r\n\r\n  const handleEditorWillMount = monaco => {\r\n    monaco.editor.defineTheme('customTheme', {\r\n      base: 'vs-dark',\r\n      inherit: true,\r\n      rules: [],\r\n      colors: {}\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"toolbar\">\r\n        <button onClick={handleRunCode}>Run Code</button>\r\n        <button onClick={handleSaveBlocks}>Save Blocks</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".json\"\r\n          onChange={handleLoadBlocks}\r\n          style={{ display: 'none' }}\r\n          id=\"load-blocks\"\r\n        />\r\n        <label htmlFor=\"load-blocks\" className=\"button\">\r\n          Load Blocks\r\n        </label>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"blockly-container\">\r\n          <BlocklyWorkspace\r\n            toolboxConfiguration={INITIAL_TOOLBOX_JSON}\r\n            initialXml='<xml xmlns=\"https://developers.google.com/blockly/xml\"></xml>'\r\n            className=\"blockly-editor\"\r\n            onWorkspaceChange={handleWorkspaceChange}\r\n            workspaceConfiguration={{\r\n              grid: {\r\n                spacing: 20,\r\n                length: 3,\r\n                colour: '#ccc',\r\n                snap: true,\r\n              },\r\n              zoom: {\r\n                controls: true,\r\n                wheel: true,\r\n                startScale: 1.0,\r\n                maxScale: 2,\r\n                minScale: 0.4,\r\n                scaleSpeed: 1.1\r\n              },\r\n              trashcan: true,\r\n              renderer: 'geras',\r\n              move: {\r\n                drag: true,\r\n                wheel: true\r\n              },\r\n              theme: blocklyTheme\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <div className=\"code-container\">\r\n            <Editor\r\n              height=\"100%\"\r\n              defaultLanguage=\"python\"\r\n              value={pythonCode || '# Your Python code will appear here'}\r\n              loading={<div className=\"editor-loading\">Loading editor...</div>}\r\n              beforeMount={handleEditorWillMount}\r\n              onMount={handleEditorDidMount}\r\n              options={{\r\n                readOnly: true,\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                wordWrap: 'on',\r\n                theme: 'vs-dark'\r\n              }}\r\n              path=\"model://python\"\r\n              defaultPath=\"model://python\"\r\n              keepCurrentModel={true}\r\n            />\r\n          </div>\r\n          <div className=\"output-container\">\r\n            <h3>Output:</h3>\r\n            <pre>{output}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}