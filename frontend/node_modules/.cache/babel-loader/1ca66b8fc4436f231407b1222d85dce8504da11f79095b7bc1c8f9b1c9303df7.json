{"ast":null,"code":"import Blockly from'blockly/core';import'blockly/blocks';import{pythonGenerator}from'blockly/python';const classMutator={mutationToDom:function(){var container=Blockly.utils.xml.createElement('mutation');container.setAttribute('items',this.itemCount_);return container;},domToMutation:function(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute('items'),10);this.updateShape_();},decompose:function(workspace){var containerBlock=workspace.newBlock('class_create_container');containerBlock.initSvg();var connection=containerBlock.getInput('STACK').connection;for(var i=0;i<this.itemCount_;i++){var itemBlock=workspace.newBlock('class_create_method');itemBlock.initSvg();connection.connect(itemBlock.previousConnection);connection=itemBlock.nextConnection;}return containerBlock;},compose:function(containerBlock){var itemBlock=containerBlock.getInputTargetBlock('STACK');var connections=[];var nameConnections=[];while(itemBlock&&!itemBlock.isInsertionMarker()){connections.push(itemBlock.valueConnection_);nameConnections.push(itemBlock.nameConnection_);itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();}this.itemCount_=connections.length;this.updateShape_();for(var i=0;i<this.itemCount_;i++){if(nameConnections[i]){this.getInput('NAME'+i).connection.connect(nameConnections[i]);}if(connections[i]){this.getInput('CODE'+i).connection.connect(connections[i]);}}},saveConnections:function(containerBlock){var itemBlock=containerBlock.getInputTargetBlock('STACK');var i=0;while(itemBlock){var nameInput=this.getInput('NAME'+i);var codeInput=this.getInput('CODE'+i);itemBlock.nameConnection_=nameInput&&nameInput.connection.targetConnection;itemBlock.valueConnection_=codeInput&&codeInput.connection.targetConnection;i++;itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();}}};Blockly.Blocks['class_create']={init:function(){this.setHelpUrl('');this.setColour(360);this.itemCount_=3;this.appendValueInput('CLASS_NAME').setCheck('String').appendField('create class named');this.setMutator(new Blockly.Mutator(['class_create_method']));this.updateShape_();this.setOutput(true,'Class');this.setTooltip('Create a class with any number of methods');},mutationToDom:function(){var container=Blockly.utils.xml.createElement('mutation');container.setAttribute('items',this.itemCount_);return container;},domToMutation:function(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute('items'),10);this.updateShape_();},decompose:function(workspace){var containerBlock=workspace.newBlock('class_create_container');containerBlock.initSvg();var connection=containerBlock.getInput('STACK').connection;for(var i=0;i<this.itemCount_;i++){var itemBlock=workspace.newBlock('class_create_method');itemBlock.initSvg();connection.connect(itemBlock.previousConnection);connection=itemBlock.nextConnection;}return containerBlock;},compose:function(containerBlock){var itemBlock=containerBlock.getInputTargetBlock('STACK');var connections=[];var nameConnections=[];while(itemBlock&&!itemBlock.isInsertionMarker()){connections.push(itemBlock.valueConnection_);nameConnections.push(itemBlock.nameConnection_);itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();}this.itemCount_=connections.length;this.updateShape_();for(var i=0;i<this.itemCount_;i++){if(nameConnections[i]){this.getInput('NAME'+i).connection.connect(nameConnections[i]);}if(connections[i]){this.getInput('CODE'+i).connection.connect(connections[i]);}}},saveConnections:function(containerBlock){var itemBlock=containerBlock.getInputTargetBlock('STACK');var i=0;while(itemBlock){var nameInput=this.getInput('NAME'+i);var codeInput=this.getInput('CODE'+i);itemBlock.nameConnection_=nameInput&&nameInput.connection.targetConnection;itemBlock.valueConnection_=codeInput&&codeInput.connection.targetConnection;i++;itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();}},updateShape_:function(){if(this.itemCount_&&this.getInput('EMPTY')){this.removeInput('EMPTY');}else if(!this.itemCount_&&!this.getInput('EMPTY')){this.appendDummyInput('EMPTY').appendField('create empty class');}// Add new inputs.\nfor(var i=0;i<this.itemCount_;i++){if(!this.getInput('NAME'+i)){this.appendValueInput('NAME'+i).setCheck('String').setAlign(Blockly.ALIGN_RIGHT).appendField(i===0?'with method':'and method');this.appendStatementInput('CODE'+i).setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField('do');}}// Remove deleted inputs.\nwhile(this.getInput('NAME'+i)){this.removeInput('NAME'+i);this.removeInput('CODE'+i);i++;}}};Object.assign(Blockly.Blocks['class_create'],classMutator);Blockly.Blocks['class_create_container']={init:function(){this.setColour(360);this.appendDummyInput().appendField('class');this.appendStatementInput('STACK');this.setTooltip('Add, remove, or reorder methods to reconfigure this class');this.contextMenu=false;}};Blockly.Blocks['class_create_method']={init:function(){this.setColour(360);this.appendDummyInput().appendField('method');this.setPreviousStatement(true);this.setNextStatement(true);this.setTooltip('Add a method to the class');this.contextMenu=false;}};pythonGenerator.forBlock['class_create']=function(block){var className=pythonGenerator.valueToCode(block,'CLASS_NAME',pythonGenerator.ORDER_NONE)||'MyClass';var methods=[];for(var i=0;i<block.itemCount_;i++){var methodName=pythonGenerator.valueToCode(block,'NAME'+i,pythonGenerator.ORDER_NONE)||'\"method'+i+'\"';var methodCode=pythonGenerator.statementToCode(block,'CODE'+i)||pythonGenerator.PASS;methods.push('def '+methodName+'(self):\\n'+methodCode);}var code='class '+className+':\\n'+methods.join('\\n');return[code,pythonGenerator.ORDER_NONE];};Blockly.Blocks['class_get']={init:function(){this.appendValueInput('INSTANCE').setCheck(null).appendField('get attribute');this.appendValueInput('ATTRIBUTE').setCheck('String').appendField('from instance');this.setOutput(true,null);this.setColour(160);this.setTooltip('Get an attribute value from a class instance');}};pythonGenerator.forBlock['class_get']=function(block){const instance=pythonGenerator.valueToCode(block,'INSTANCE',pythonGenerator.ORDER_MEMBER)||'instance';const attribute=pythonGenerator.valueToCode(block,'ATTRIBUTE',pythonGenerator.ORDER_ATOMIC)||\"'attribute'\";return[`${instance}.${attribute}`,pythonGenerator.ORDER_MEMBER];};Blockly.Blocks['class_set']={init:function(){this.appendValueInput('INSTANCE').setCheck(null).appendField('set attribute');this.appendValueInput('ATTRIBUTE').setCheck('String').appendField('in instance');this.appendValueInput('VALUE').setCheck(null).appendField('to');this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(160);this.setTooltip('Set an attribute value in a class instance');}};pythonGenerator.forBlock['class_set']=function(block){const instance=pythonGenerator.valueToCode(block,'INSTANCE',pythonGenerator.ORDER_MEMBER)||'instance';const attribute=pythonGenerator.valueToCode(block,'ATTRIBUTE',pythonGenerator.ORDER_ATOMIC)||\"'attribute'\";const value=pythonGenerator.valueToCode(block,'VALUE',pythonGenerator.ORDER_ATOMIC)||'None';return`${instance}.${attribute} = ${value}\\n`;};Blockly.Extensions.registerMutator('class_create_mutator',{saveExtraState:function(){return{'itemCount':this.itemCount_};},loadExtraState:function(state){this.itemCount_=state['itemCount'];this.updateShape_();}},undefined,['class_create_method']);Blockly.Extensions.apply('class_create_mutator',Blockly.Blocks['class_create']);","map":{"version":3,"names":["Blockly","pythonGenerator","classMutator","mutationToDom","container","utils","xml","createElement","setAttribute","itemCount_","domToMutation","xmlElement","parseInt","getAttribute","updateShape_","decompose","workspace","containerBlock","newBlock","initSvg","connection","getInput","i","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","nameConnections","isInsertionMarker","push","valueConnection_","nameConnection_","targetBlock","length","saveConnections","nameInput","codeInput","targetConnection","Blocks","init","setHelpUrl","setColour","appendValueInput","setCheck","appendField","setMutator","Mutator","setOutput","setTooltip","removeInput","appendDummyInput","setAlign","ALIGN_RIGHT","appendStatementInput","Object","assign","contextMenu","setPreviousStatement","setNextStatement","forBlock","block","className","valueToCode","ORDER_NONE","methods","methodName","methodCode","statementToCode","PASS","code","join","instance","ORDER_MEMBER","attribute","ORDER_ATOMIC","value","Extensions","registerMutator","saveExtraState","loadExtraState","state","undefined","apply"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/STEM_KIT_app/frontend/src/blocks/class_blocks.js"],"sourcesContent":["import Blockly from 'blockly/core';\r\nimport 'blockly/blocks';\r\nimport { pythonGenerator } from 'blockly/python';\r\n\r\nconst classMutator = {\r\n  mutationToDom: function() {\r\n    var container = Blockly.utils.xml.createElement('mutation');\r\n    container.setAttribute('items', this.itemCount_);\r\n    return container;\r\n  },\r\n\r\n  domToMutation: function(xmlElement) {\r\n    this.itemCount_ = parseInt(xmlElement.getAttribute('items'), 10);\r\n    this.updateShape_();\r\n  },\r\n\r\n  decompose: function(workspace) {\r\n    var containerBlock = workspace.newBlock('class_create_container');\r\n    containerBlock.initSvg();\r\n    var connection = containerBlock.getInput('STACK').connection;\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      var itemBlock = workspace.newBlock('class_create_method');\r\n      itemBlock.initSvg();\r\n      connection.connect(itemBlock.previousConnection);\r\n      connection = itemBlock.nextConnection;\r\n    }\r\n    return containerBlock;\r\n  },\r\n\r\n  compose: function(containerBlock) {\r\n    var itemBlock = containerBlock.getInputTargetBlock('STACK');\r\n    var connections = [];\r\n    var nameConnections = [];\r\n    while (itemBlock && !itemBlock.isInsertionMarker()) {\r\n      connections.push(itemBlock.valueConnection_);\r\n      nameConnections.push(itemBlock.nameConnection_);\r\n      itemBlock = itemBlock.nextConnection &&\r\n          itemBlock.nextConnection.targetBlock();\r\n    }\r\n    this.itemCount_ = connections.length;\r\n    this.updateShape_();\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      if (nameConnections[i]) {\r\n        this.getInput('NAME' + i).connection.connect(nameConnections[i]);\r\n      }\r\n      if (connections[i]) {\r\n        this.getInput('CODE' + i).connection.connect(connections[i]);\r\n      }\r\n    }\r\n  },\r\n\r\n  saveConnections: function(containerBlock) {\r\n    var itemBlock = containerBlock.getInputTargetBlock('STACK');\r\n    var i = 0;\r\n    while (itemBlock) {\r\n      var nameInput = this.getInput('NAME' + i);\r\n      var codeInput = this.getInput('CODE' + i);\r\n      itemBlock.nameConnection_ = nameInput && nameInput.connection.targetConnection;\r\n      itemBlock.valueConnection_ = codeInput && codeInput.connection.targetConnection;\r\n      i++;\r\n      itemBlock = itemBlock.nextConnection &&\r\n          itemBlock.nextConnection.targetBlock();\r\n    }\r\n  }\r\n};\r\n\r\nBlockly.Blocks['class_create'] = {\r\n  init: function() {\r\n    this.setHelpUrl('');\r\n    this.setColour(360);\r\n    this.itemCount_ = 3;\r\n    this.appendValueInput('CLASS_NAME')\r\n        .setCheck('String')\r\n        .appendField('create class named');\r\n    this.setMutator(new Blockly.Mutator(['class_create_method']));\r\n    this.updateShape_();\r\n    this.setOutput(true, 'Class');\r\n    this.setTooltip('Create a class with any number of methods');\r\n  },\r\n\r\n  mutationToDom: function() {\r\n    var container = Blockly.utils.xml.createElement('mutation');\r\n    container.setAttribute('items', this.itemCount_);\r\n    return container;\r\n  },\r\n\r\n  domToMutation: function(xmlElement) {\r\n    this.itemCount_ = parseInt(xmlElement.getAttribute('items'), 10);\r\n    this.updateShape_();\r\n  },\r\n\r\n  decompose: function(workspace) {\r\n    var containerBlock = workspace.newBlock('class_create_container');\r\n    containerBlock.initSvg();\r\n    var connection = containerBlock.getInput('STACK').connection;\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      var itemBlock = workspace.newBlock('class_create_method');\r\n      itemBlock.initSvg();\r\n      connection.connect(itemBlock.previousConnection);\r\n      connection = itemBlock.nextConnection;\r\n    }\r\n    return containerBlock;\r\n  },\r\n\r\n  compose: function(containerBlock) {\r\n    var itemBlock = containerBlock.getInputTargetBlock('STACK');\r\n    var connections = [];\r\n    var nameConnections = [];\r\n    while (itemBlock && !itemBlock.isInsertionMarker()) {\r\n      connections.push(itemBlock.valueConnection_);\r\n      nameConnections.push(itemBlock.nameConnection_);\r\n      itemBlock = itemBlock.nextConnection &&\r\n          itemBlock.nextConnection.targetBlock();\r\n    }\r\n    this.itemCount_ = connections.length;\r\n    this.updateShape_();\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      if (nameConnections[i]) {\r\n        this.getInput('NAME' + i).connection.connect(nameConnections[i]);\r\n      }\r\n      if (connections[i]) {\r\n        this.getInput('CODE' + i).connection.connect(connections[i]);\r\n      }\r\n    }\r\n  },\r\n\r\n  saveConnections: function(containerBlock) {\r\n    var itemBlock = containerBlock.getInputTargetBlock('STACK');\r\n    var i = 0;\r\n    while (itemBlock) {\r\n      var nameInput = this.getInput('NAME' + i);\r\n      var codeInput = this.getInput('CODE' + i);\r\n      itemBlock.nameConnection_ = nameInput && nameInput.connection.targetConnection;\r\n      itemBlock.valueConnection_ = codeInput && codeInput.connection.targetConnection;\r\n      i++;\r\n      itemBlock = itemBlock.nextConnection &&\r\n          itemBlock.nextConnection.targetBlock();\r\n    }\r\n  },\r\n\r\n  updateShape_: function() {\r\n    if (this.itemCount_ && this.getInput('EMPTY')) {\r\n      this.removeInput('EMPTY');\r\n    } else if (!this.itemCount_ && !this.getInput('EMPTY')) {\r\n      this.appendDummyInput('EMPTY')\r\n          .appendField('create empty class');\r\n    }\r\n\r\n    // Add new inputs.\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      if (!this.getInput('NAME' + i)) {\r\n        this.appendValueInput('NAME' + i)\r\n            .setCheck('String')\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(i === 0 ? 'with method' : 'and method');\r\n        this.appendStatementInput('CODE' + i)\r\n            .setCheck(null)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField('do');\r\n      }\r\n    }\r\n    // Remove deleted inputs.\r\n    while (this.getInput('NAME' + i)) {\r\n      this.removeInput('NAME' + i);\r\n      this.removeInput('CODE' + i);\r\n      i++;\r\n    }\r\n  }\r\n};\r\n\r\nObject.assign(Blockly.Blocks['class_create'], classMutator);\r\n\r\nBlockly.Blocks['class_create_container'] = {\r\n  init: function() {\r\n    this.setColour(360);\r\n    this.appendDummyInput()\r\n        .appendField('class');\r\n    this.appendStatementInput('STACK');\r\n    this.setTooltip('Add, remove, or reorder methods to reconfigure this class');\r\n    this.contextMenu = false;\r\n  }\r\n};\r\n\r\nBlockly.Blocks['class_create_method'] = {\r\n  init: function() {\r\n    this.setColour(360);\r\n    this.appendDummyInput()\r\n        .appendField('method');\r\n    this.setPreviousStatement(true);\r\n    this.setNextStatement(true);\r\n    this.setTooltip('Add a method to the class');\r\n    this.contextMenu = false;\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['class_create'] = function(block) {\r\n  var className = pythonGenerator.valueToCode(block, 'CLASS_NAME',\r\n      pythonGenerator.ORDER_NONE) || 'MyClass';\r\n  var methods = [];\r\n  for (var i = 0; i < block.itemCount_; i++) {\r\n    var methodName = pythonGenerator.valueToCode(block, 'NAME' + i,\r\n        pythonGenerator.ORDER_NONE) || '\"method' + i + '\"';\r\n    var methodCode = pythonGenerator.statementToCode(block, 'CODE' + i) || \r\n        pythonGenerator.PASS;\r\n    methods.push('def ' + methodName + '(self):\\n' + methodCode);\r\n  }\r\n  var code = 'class ' + className + ':\\n' + methods.join('\\n');\r\n  return [code, pythonGenerator.ORDER_NONE];\r\n};\r\n\r\nBlockly.Blocks['class_get'] = {\r\n  init: function() {\r\n    this.appendValueInput('INSTANCE')\r\n        .setCheck(null)\r\n        .appendField('get attribute');\r\n    this.appendValueInput('ATTRIBUTE')\r\n        .setCheck('String')\r\n        .appendField('from instance');\r\n    this.setOutput(true, null);\r\n    this.setColour(160);\r\n    this.setTooltip('Get an attribute value from a class instance');\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['class_get'] = function(block) {\r\n  const instance = pythonGenerator.valueToCode(block, 'INSTANCE', pythonGenerator.ORDER_MEMBER) || 'instance';\r\n  const attribute = pythonGenerator.valueToCode(block, 'ATTRIBUTE', pythonGenerator.ORDER_ATOMIC) || \"'attribute'\";\r\n  return [`${instance}.${attribute}`, pythonGenerator.ORDER_MEMBER];\r\n};\r\n\r\nBlockly.Blocks['class_set'] = {\r\n  init: function() {\r\n    this.appendValueInput('INSTANCE')\r\n        .setCheck(null)\r\n        .appendField('set attribute');\r\n    this.appendValueInput('ATTRIBUTE')\r\n        .setCheck('String')\r\n        .appendField('in instance');\r\n    this.appendValueInput('VALUE')\r\n        .setCheck(null)\r\n        .appendField('to');\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(160);\r\n    this.setTooltip('Set an attribute value in a class instance');\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['class_set'] = function(block) {\r\n  const instance = pythonGenerator.valueToCode(block, 'INSTANCE', pythonGenerator.ORDER_MEMBER) || 'instance';\r\n  const attribute = pythonGenerator.valueToCode(block, 'ATTRIBUTE', pythonGenerator.ORDER_ATOMIC) || \"'attribute'\";\r\n  const value = pythonGenerator.valueToCode(block, 'VALUE', pythonGenerator.ORDER_ATOMIC) || 'None';\r\n  return `${instance}.${attribute} = ${value}\\n`;\r\n};\r\n\r\nBlockly.Extensions.registerMutator('class_create_mutator',\r\n  {\r\n    saveExtraState: function() {\r\n      return { 'itemCount': this.itemCount_ };\r\n    },\r\n\r\n    loadExtraState: function(state) {\r\n      this.itemCount_ = state['itemCount'];\r\n      this.updateShape_();\r\n    }\r\n  },\r\n  undefined,\r\n  ['class_create_method']\r\n);\r\n\r\nBlockly.Extensions.apply('class_create_mutator', Blockly.Blocks['class_create']); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}