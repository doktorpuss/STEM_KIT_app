{"ast":null,"code":"import React,{useState}from'react';import{BlocklyWorkspace}from'react-blockly';import Blockly from'blockly';import'blockly/python';import Editor from'@monaco-editor/react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const INITIAL_TOOLBOX_JSON={\"kind\":\"categoryToolbox\",\"contents\":[{\"kind\":\"category\",\"name\":\"Logic\",\"colour\":\"%{BKY_LOGIC_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_if\"},{\"kind\":\"block\",\"type\":\"logic_compare\"},{\"kind\":\"block\",\"type\":\"logic_operation\"},{\"kind\":\"block\",\"type\":\"logic_negate\"}]},{\"kind\":\"category\",\"name\":\"Loops\",\"colour\":\"%{BKY_LOOPS_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_repeat_ext\"},{\"kind\":\"block\",\"type\":\"controls_whileUntil\"},{\"kind\":\"block\",\"type\":\"controls_for\"}]},{\"kind\":\"category\",\"name\":\"Math\",\"colour\":\"%{BKY_MATH_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"math_number\"},{\"kind\":\"block\",\"type\":\"math_arithmetic\"},{\"kind\":\"block\",\"type\":\"math_single\"}]},{\"kind\":\"category\",\"name\":\"Text\",\"colour\":\"%{BKY_TEXTS_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"text\"},{\"kind\":\"block\",\"type\":\"text_print\"},{\"kind\":\"block\",\"type\":\"text_join\"}]},{\"kind\":\"category\",\"name\":\"Lists\",\"colour\":\"%{BKY_LISTS_HUE}\",\"contents\":[{\"kind\":\"block\",\"type\":\"lists_create_empty\"},{\"kind\":\"block\",\"type\":\"lists_create_with\"},{\"kind\":\"block\",\"type\":\"lists_repeat\"},{\"kind\":\"block\",\"type\":\"lists_length\"},{\"kind\":\"block\",\"type\":\"lists_getIndex\"},{\"kind\":\"block\",\"type\":\"lists_setIndex\"}]},{\"kind\":\"category\",\"name\":\"Variables\",\"custom\":\"VARIABLE\",\"colour\":\"%{BKY_VARIABLES_HUE}\"},{\"kind\":\"category\",\"name\":\"Functions\",\"custom\":\"PROCEDURE\",\"colour\":\"%{BKY_PROCEDURES_HUE}\"}]};function App(){const[pythonCode,setPythonCode]=useState('');const handleWorkspaceChange=workspace=>{const code=Blockly.Python.workspaceToCode(workspace);setPythonCode(code);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"blockly-container\",children:/*#__PURE__*/_jsx(BlocklyWorkspace,{toolboxConfiguration:INITIAL_TOOLBOX_JSON,initialXml:\"\",className:\"blockly-editor\",onWorkspaceChange:handleWorkspaceChange,onXmlChange:()=>{}})}),/*#__PURE__*/_jsx(\"div\",{className:\"code-container\",children:/*#__PURE__*/_jsx(Editor,{height:\"100%\",defaultLanguage:\"python\",value:pythonCode,theme:\"vs-dark\",options:{readOnly:true,minimap:{enabled:true},fontSize:14,automaticLayout:true}})})]});}export default App;","map":{"version":3,"names":["React","useState","BlocklyWorkspace","Blockly","Editor","jsx","_jsx","jsxs","_jsxs","INITIAL_TOOLBOX_JSON","App","pythonCode","setPythonCode","handleWorkspaceChange","workspace","code","Python","workspaceToCode","className","children","toolboxConfiguration","initialXml","onWorkspaceChange","onXmlChange","height","defaultLanguage","value","theme","options","readOnly","minimap","enabled","fontSize","automaticLayout"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/pi_app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BlocklyWorkspace } from 'react-blockly';\r\nimport Blockly from 'blockly';\r\nimport 'blockly/python';\r\nimport Editor from '@monaco-editor/react';\r\nimport './App.css';\r\n\r\nconst INITIAL_TOOLBOX_JSON = {\r\n  \"kind\": \"categoryToolbox\",\r\n  \"contents\": [\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Logic\",\r\n      \"colour\": \"%{BKY_LOGIC_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_if\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_compare\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_operation\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_negate\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Loops\",\r\n      \"colour\": \"%{BKY_LOOPS_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_repeat_ext\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_whileUntil\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_for\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Math\",\r\n      \"colour\": \"%{BKY_MATH_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"math_number\" },\r\n        { \"kind\": \"block\", \"type\": \"math_arithmetic\" },\r\n        { \"kind\": \"block\", \"type\": \"math_single\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Text\",\r\n      \"colour\": \"%{BKY_TEXTS_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"text\" },\r\n        { \"kind\": \"block\", \"type\": \"text_print\" },\r\n        { \"kind\": \"block\", \"type\": \"text_join\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Lists\",\r\n      \"colour\": \"%{BKY_LISTS_HUE}\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"lists_create_empty\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_create_with\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_repeat\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_length\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_getIndex\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_setIndex\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Variables\",\r\n      \"custom\": \"VARIABLE\",\r\n      \"colour\": \"%{BKY_VARIABLES_HUE}\"\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Functions\",\r\n      \"custom\": \"PROCEDURE\",\r\n      \"colour\": \"%{BKY_PROCEDURES_HUE}\"\r\n    }\r\n  ]\r\n};\r\n\r\nfunction App() {\r\n  const [pythonCode, setPythonCode] = useState('');\r\n\r\n  const handleWorkspaceChange = (workspace) => {\r\n    const code = Blockly.Python.workspaceToCode(workspace);\r\n    setPythonCode(code);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"blockly-container\">\r\n        <BlocklyWorkspace\r\n          toolboxConfiguration={INITIAL_TOOLBOX_JSON}\r\n          initialXml=\"\"\r\n          className=\"blockly-editor\"\r\n          onWorkspaceChange={handleWorkspaceChange}\r\n          onXmlChange={() => {}}\r\n        />\r\n      </div>\r\n      <div className=\"code-container\">\r\n        <Editor\r\n          height=\"100%\"\r\n          defaultLanguage=\"python\"\r\n          value={pythonCode}\r\n          theme=\"vs-dark\"\r\n          options={{\r\n            readOnly: true,\r\n            minimap: { enabled: true },\r\n            fontSize: 14,\r\n            automaticLayout: true\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}