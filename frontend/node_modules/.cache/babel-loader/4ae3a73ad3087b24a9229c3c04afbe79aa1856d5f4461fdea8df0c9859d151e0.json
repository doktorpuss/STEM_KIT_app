{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BlocklyWorkspace}from'react-blockly';import*as Blockly from'blockly/core';import'blockly/blocks';import{pythonGenerator}from'blockly/python';import Editor from'react-simple-code-editor';import{highlight,languages}from'prismjs';import'prismjs/components/prism-python';import'prismjs/themes/prism-tomorrow.css';import'./App.css';import'./blocks/time_blocks';// Định nghĩa màu sắc cho các khối\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";Blockly.HSV_SATURATION=0.45;Blockly.HSV_VALUE=0.65;const INITIAL_TOOLBOX_JSON={\"kind\":\"categoryToolbox\",\"contents\":[{\"kind\":\"category\",\"name\":\"Logic\",\"categorystyle\":\"logic_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_if\"},{\"kind\":\"block\",\"type\":\"logic_compare\"},{\"kind\":\"block\",\"type\":\"logic_operation\"},{\"kind\":\"block\",\"type\":\"logic_negate\"}]},{\"kind\":\"category\",\"name\":\"Loops\",\"categorystyle\":\"loop_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"controls_repeat_ext\"},{\"kind\":\"block\",\"type\":\"controls_whileUntil\"},{\"kind\":\"block\",\"type\":\"controls_for\"}]},{\"kind\":\"category\",\"name\":\"Math\",\"categorystyle\":\"math_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"math_number\"},{\"kind\":\"block\",\"type\":\"math_arithmetic\"},{\"kind\":\"block\",\"type\":\"math_single\"}]},{\"kind\":\"category\",\"name\":\"Text\",\"categorystyle\":\"text_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"text\"},{\"kind\":\"block\",\"type\":\"text_print\"},{\"kind\":\"block\",\"type\":\"text_join\"}]},{\"kind\":\"category\",\"name\":\"Lists\",\"categorystyle\":\"list_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"lists_create_empty\"},{\"kind\":\"block\",\"type\":\"lists_create_with\"},{\"kind\":\"block\",\"type\":\"lists_repeat\"},{\"kind\":\"block\",\"type\":\"lists_length\"},{\"kind\":\"block\",\"type\":\"lists_getIndex\"},{\"kind\":\"block\",\"type\":\"lists_setIndex\"}]},{\"kind\":\"category\",\"name\":\"Time\",\"categorystyle\":\"time_category\",\"contents\":[{\"kind\":\"block\",\"type\":\"time_sleep\"},{\"kind\":\"block\",\"type\":\"time_time\"}]},{\"kind\":\"category\",\"name\":\"Variables\",\"categorystyle\":\"variable_category\",\"custom\":\"VARIABLE\"},{\"kind\":\"category\",\"name\":\"Functions\",\"categorystyle\":\"procedure_category\",\"custom\":\"PROCEDURE\"}]};// Định nghĩa theme cho Blockly\nconst blocklyTheme=Blockly.Theme.defineTheme('custom',{'base':Blockly.Themes.Classic,'componentStyles':{'workspaceBackgroundColour':'#ffffff','toolboxBackgroundColour':'#f0f0f0','toolboxForegroundColour':'#333','flyoutBackgroundColour':'#eee','flyoutForegroundColour':'#444','scrollbarColour':'#ccc','insertionMarkerColour':'#fff','insertionMarkerOpacity':0.3,'scrollbarOpacity':0.4,'cursorColour':'#d0d0d0'},'categoryStyles':{'logic_category':{'colour':'210'},'loop_category':{'colour':'120'},'math_category':{'colour':'230'},'text_category':{'colour':'160'},'list_category':{'colour':'260'},'time_category':{'colour':'290'},'variable_category':{'colour':'330'},'procedure_category':{'colour':'290'}}});function App(){const[pythonCode,setPythonCode]=useState('');const[blocklyWorkspace,setBlocklyWorkspace]=useState(null);const[isRunning,setIsRunning]=useState(false);useEffect(()=>{if(blocklyWorkspace){const updateCode=()=>{try{const code=pythonGenerator.workspaceToCode(blocklyWorkspace);setPythonCode(code);}catch(error){console.error('Error generating code:',error);}};blocklyWorkspace.addChangeListener(updateCode);return()=>{blocklyWorkspace.removeChangeListener(updateCode);};}},[blocklyWorkspace]);const handleWorkspaceChange=workspace=>{setBlocklyWorkspace(workspace);};const handleRunCode=async()=>{try{setIsRunning(true);await fetch('http://localhost:5000/run',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({code:pythonCode,use_terminal:true})});}catch(error){console.error('Error running code:',error);}finally{setIsRunning(false);}};const handleSaveBlocks=async()=>{try{const workspace=Blockly.getMainWorkspace();const dom=Blockly.Xml.workspaceToDom(workspace);const xmlText=Blockly.Xml.domToPrettyText(dom);const response=await fetch('http://localhost:5000/save_blocks',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({blocks:xmlText})});if(response.ok){const result=await response.text();console.log(result);alert('Blocks saved successfully!');}else{console.error('Error saving blocks');alert('Error saving blocks. Please try again.');}}catch(error){console.error('Error saving blocks:',error);alert('Error saving blocks. Please try again.');}};const handleLoadBlocks=event=>{const file=event.target.files[0];if(file&&blocklyWorkspace){const reader=new FileReader();reader.onload=e=>{try{const xmlText=e.target.result;const dom=Blockly.Xml.textToDom(xmlText);Blockly.Xml.clearWorkspaceAndLoadFromXml(dom,blocklyWorkspace);alert('Blocks loaded successfully!');}catch(error){console.error('Error loading blocks:',error);alert('Error loading blocks. Please try again.');}};reader.readAsText(file);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toolbar\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"toolbar-button\",onClick:handleSaveBlocks,children:\"Save Blocks\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".xml\",onChange:handleLoadBlocks,style:{display:'none'},id:\"load-blocks\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"load-blocks\",className:\"toolbar-button\",children:\"Load Blocks\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"blockly-container\",children:/*#__PURE__*/_jsx(BlocklyWorkspace,{toolboxConfiguration:INITIAL_TOOLBOX_JSON,initialXml:\"<xml xmlns=\\\"https://developers.google.com/blockly/xml\\\"></xml>\",className:\"blockly-editor\",onWorkspaceChange:handleWorkspaceChange,workspaceConfiguration:{grid:{spacing:20,length:3,colour:'#ccc',snap:true},zoom:{controls:true,wheel:true,startScale:1.0,maxScale:2,minScale:0.4,scaleSpeed:1.1},trashcan:true,renderer:'geras',move:{drag:true,wheel:true},theme:blocklyTheme,media:'/lib/blockly/media/'}})}),/*#__PURE__*/_jsx(\"div\",{className:\"right-panel\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"code-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"code-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Generated Python Code\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRunCode,disabled:isRunning,className:\"run-button\",children:isRunning?'Running...':'Run in Terminal'})]}),/*#__PURE__*/_jsx(Editor,{value:pythonCode||'# Generated Python code will appear here',onValueChange:()=>{},highlight:code=>highlight(code,languages.python),padding:10,style:{fontFamily:'\"Fira code\", \"Fira Mono\", monospace',fontSize:14,backgroundColor:'#f8f8f8',height:'100%',minHeight:'200px'}})]})})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","BlocklyWorkspace","Blockly","pythonGenerator","Editor","highlight","languages","jsx","_jsx","jsxs","_jsxs","HSV_SATURATION","HSV_VALUE","INITIAL_TOOLBOX_JSON","blocklyTheme","Theme","defineTheme","Themes","Classic","App","pythonCode","setPythonCode","blocklyWorkspace","setBlocklyWorkspace","isRunning","setIsRunning","updateCode","code","workspaceToCode","error","console","addChangeListener","removeChangeListener","handleWorkspaceChange","workspace","handleRunCode","fetch","method","headers","body","JSON","stringify","use_terminal","handleSaveBlocks","getMainWorkspace","dom","Xml","workspaceToDom","xmlText","domToPrettyText","response","blocks","ok","result","text","log","alert","handleLoadBlocks","event","file","target","files","reader","FileReader","onload","e","textToDom","clearWorkspaceAndLoadFromXml","readAsText","className","children","onClick","type","accept","onChange","style","display","id","htmlFor","toolboxConfiguration","initialXml","onWorkspaceChange","workspaceConfiguration","grid","spacing","length","colour","snap","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","trashcan","renderer","move","drag","theme","media","disabled","value","onValueChange","python","padding","fontFamily","fontSize","backgroundColor","height","minHeight"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/pi_app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BlocklyWorkspace } from 'react-blockly';\r\nimport * as Blockly from 'blockly/core';\r\nimport 'blockly/blocks';\r\nimport { pythonGenerator } from 'blockly/python';\r\nimport Editor from 'react-simple-code-editor';\r\nimport { highlight, languages } from 'prismjs';\r\nimport 'prismjs/components/prism-python';\r\nimport 'prismjs/themes/prism-tomorrow.css';\r\nimport './App.css';\r\nimport './blocks/time_blocks';\r\n\r\n// Định nghĩa màu sắc cho các khối\r\nBlockly.HSV_SATURATION = 0.45;\r\nBlockly.HSV_VALUE = 0.65;\r\n\r\nconst INITIAL_TOOLBOX_JSON = {\r\n  \"kind\": \"categoryToolbox\",\r\n  \"contents\": [\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Logic\",\r\n      \"categorystyle\": \"logic_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_if\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_compare\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_operation\" },\r\n        { \"kind\": \"block\", \"type\": \"logic_negate\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Loops\",\r\n      \"categorystyle\": \"loop_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"controls_repeat_ext\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_whileUntil\" },\r\n        { \"kind\": \"block\", \"type\": \"controls_for\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Math\",\r\n      \"categorystyle\": \"math_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"math_number\" },\r\n        { \"kind\": \"block\", \"type\": \"math_arithmetic\" },\r\n        { \"kind\": \"block\", \"type\": \"math_single\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Text\",\r\n      \"categorystyle\": \"text_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"text\" },\r\n        { \"kind\": \"block\", \"type\": \"text_print\" },\r\n        { \"kind\": \"block\", \"type\": \"text_join\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Lists\",\r\n      \"categorystyle\": \"list_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"lists_create_empty\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_create_with\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_repeat\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_length\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_getIndex\" },\r\n        { \"kind\": \"block\", \"type\": \"lists_setIndex\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Time\",\r\n      \"categorystyle\": \"time_category\",\r\n      \"contents\": [\r\n        { \"kind\": \"block\", \"type\": \"time_sleep\" },\r\n        { \"kind\": \"block\", \"type\": \"time_time\" }\r\n      ]\r\n    },\r\n    {\r\n      \"kind\": \"category\",\r\n      \"name\": \"Variables\",\r\n      \"categorystyle\": \"variable_category\",\r\n      \"custom\": \"VARIABLE\"\r\n    },\r\n    {\r\n      \"kind\": \"category\", \r\n      \"name\": \"Functions\",\r\n      \"categorystyle\": \"procedure_category\",\r\n      \"custom\": \"PROCEDURE\"\r\n    }\r\n  ]\r\n};\r\n\r\n// Định nghĩa theme cho Blockly\r\nconst blocklyTheme = Blockly.Theme.defineTheme('custom', {\r\n  'base': Blockly.Themes.Classic,\r\n  'componentStyles': {\r\n    'workspaceBackgroundColour': '#ffffff',\r\n    'toolboxBackgroundColour': '#f0f0f0',\r\n    'toolboxForegroundColour': '#333',\r\n    'flyoutBackgroundColour': '#eee',\r\n    'flyoutForegroundColour': '#444',\r\n    'scrollbarColour': '#ccc',\r\n    'insertionMarkerColour': '#fff',\r\n    'insertionMarkerOpacity': 0.3,\r\n    'scrollbarOpacity': 0.4,\r\n    'cursorColour': '#d0d0d0'\r\n  },\r\n  'categoryStyles': {\r\n    'logic_category': { 'colour': '210' },\r\n    'loop_category': { 'colour': '120' },\r\n    'math_category': { 'colour': '230' },\r\n    'text_category': { 'colour': '160' },\r\n    'list_category': { 'colour': '260' },\r\n    'time_category': { 'colour': '290' },\r\n    'variable_category': { 'colour': '330' },\r\n    'procedure_category': { 'colour': '290' }\r\n  }\r\n});\r\n\r\nfunction App() {\r\n  const [pythonCode, setPythonCode] = useState('');\r\n  const [blocklyWorkspace, setBlocklyWorkspace] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (blocklyWorkspace) {\r\n      const updateCode = () => {\r\n        try {\r\n          const code = pythonGenerator.workspaceToCode(blocklyWorkspace);\r\n          setPythonCode(code);\r\n        } catch (error) {\r\n          console.error('Error generating code:', error);\r\n        }\r\n      };\r\n\r\n      blocklyWorkspace.addChangeListener(updateCode);\r\n      return () => {\r\n        blocklyWorkspace.removeChangeListener(updateCode);\r\n      };\r\n    }\r\n  }, [blocklyWorkspace]);\r\n\r\n  const handleWorkspaceChange = (workspace) => {\r\n    setBlocklyWorkspace(workspace);\r\n  };\r\n\r\n  const handleRunCode = async () => {\r\n    try {\r\n      setIsRunning(true);\r\n      \r\n      await fetch('http://localhost:5000/run', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          code: pythonCode,\r\n          use_terminal: true\r\n        }),\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error running code:', error);\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveBlocks = async () => {\r\n    try {\r\n      const workspace = Blockly.getMainWorkspace();\r\n      const dom = Blockly.Xml.workspaceToDom(workspace);\r\n      const xmlText = Blockly.Xml.domToPrettyText(dom);\r\n      \r\n      const response = await fetch('http://localhost:5000/save_blocks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          blocks: xmlText\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const result = await response.text();\r\n        console.log(result);\r\n        alert('Blocks saved successfully!');\r\n      } else {\r\n        console.error('Error saving blocks');\r\n        alert('Error saving blocks. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving blocks:', error);\r\n      alert('Error saving blocks. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleLoadBlocks = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && blocklyWorkspace) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const xmlText = e.target.result;\r\n          const dom = Blockly.Xml.textToDom(xmlText);\r\n          Blockly.Xml.clearWorkspaceAndLoadFromXml(dom, blocklyWorkspace);\r\n          alert('Blocks loaded successfully!');\r\n        } catch (error) {\r\n          console.error('Error loading blocks:', error);\r\n          alert('Error loading blocks. Please try again.');\r\n        }\r\n      };\r\n      reader.readAsText(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"toolbar\">\r\n        <button className=\"toolbar-button\" onClick={handleSaveBlocks}>Save Blocks</button>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".xml\"\r\n          onChange={handleLoadBlocks}\r\n          style={{ display: 'none' }}\r\n          id=\"load-blocks\"\r\n        />\r\n        <label htmlFor=\"load-blocks\" className=\"toolbar-button\">\r\n          Load Blocks\r\n        </label>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"blockly-container\">\r\n          <BlocklyWorkspace\r\n            toolboxConfiguration={INITIAL_TOOLBOX_JSON}\r\n            initialXml='<xml xmlns=\"https://developers.google.com/blockly/xml\"></xml>'\r\n            className=\"blockly-editor\"\r\n            onWorkspaceChange={handleWorkspaceChange}\r\n            workspaceConfiguration={{\r\n              grid: {\r\n                spacing: 20,\r\n                length: 3,\r\n                colour: '#ccc',\r\n                snap: true,\r\n              },\r\n              zoom: {\r\n                controls: true,\r\n                wheel: true,\r\n                startScale: 1.0,\r\n                maxScale: 2,\r\n                minScale: 0.4,\r\n                scaleSpeed: 1.1\r\n              },\r\n              trashcan: true,\r\n              renderer: 'geras',\r\n              move: {\r\n                drag: true,\r\n                wheel: true\r\n              },\r\n              theme: blocklyTheme,\r\n              media: '/lib/blockly/media/'\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"right-panel\">\r\n          <div className=\"code-container\">\r\n            <div className=\"code-header\">\r\n              <h2>Generated Python Code</h2>\r\n              <button \r\n                onClick={handleRunCode} \r\n                disabled={isRunning}\r\n                className=\"run-button\"\r\n              >\r\n                {isRunning ? 'Running...' : 'Run in Terminal'}\r\n              </button>\r\n            </div>\r\n            <Editor\r\n              value={pythonCode || '# Generated Python code will appear here'}\r\n              onValueChange={() => {}}\r\n              highlight={code => highlight(code, languages.python)}\r\n              padding={10}\r\n              style={{\r\n                fontFamily: '\"Fira code\", \"Fira Mono\", monospace',\r\n                fontSize: 14,\r\n                backgroundColor: '#f8f8f8',\r\n                height: '100%',\r\n                minHeight: '200px'\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}