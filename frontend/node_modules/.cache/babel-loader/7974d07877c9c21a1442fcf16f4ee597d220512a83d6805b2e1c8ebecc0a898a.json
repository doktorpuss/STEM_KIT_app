{"ast":null,"code":"import Blockly from'blockly/core';import'blockly/blocks';import{pythonGenerator}from'blockly/python';// Define time blocks\nconst timeBlocks={'time_sleep':{init:function(){this.appendValueInput('SECONDS').setCheck('Number').appendField('sleep for').appendField('seconds');this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(230);this.setTooltip('Pause execution for specified number of seconds');}},'time_time':{init:function(){this.appendDummyInput().appendField('current time');this.setOutput(true,'Number');this.setColour(230);this.setTooltip('Get current time in seconds since epoch');}}};// Register blocks\nObject.keys(timeBlocks).forEach(blockType=>{Blockly.Blocks[blockType]=timeBlocks[blockType];});// Register Python generators\npythonGenerator['time_sleep']=function(block){// Add import time to definitions\npythonGenerator.definitions_['import_time']='import time';const seconds=pythonGenerator.valueToCode(block,'SECONDS',pythonGenerator.ORDER_ATOMIC)||'0';return`time.sleep(${seconds})\\n`;};pythonGenerator['time_time']=function(block){// Add import time to definitions\npythonGenerator.definitions_['import_time']='import time';return['time.time()',pythonGenerator.ORDER_FUNCTION_CALL];};","map":{"version":3,"names":["Blockly","pythonGenerator","timeBlocks","init","appendValueInput","setCheck","appendField","setPreviousStatement","setNextStatement","setColour","setTooltip","appendDummyInput","setOutput","Object","keys","forEach","blockType","Blocks","block","definitions_","seconds","valueToCode","ORDER_ATOMIC","ORDER_FUNCTION_CALL"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/STEM_KIT_app/frontend/src/blocks/time_blocks.js"],"sourcesContent":["import Blockly from 'blockly/core';\r\nimport 'blockly/blocks';\r\nimport { pythonGenerator } from 'blockly/python';\r\n\r\n// Define time blocks\r\nconst timeBlocks = {\r\n  'time_sleep': {\r\n    init: function() {\r\n      this.appendValueInput('SECONDS')\r\n          .setCheck('Number')\r\n          .appendField('sleep for')\r\n          .appendField('seconds');\r\n      this.setPreviousStatement(true, null);\r\n      this.setNextStatement(true, null);\r\n      this.setColour(230);\r\n      this.setTooltip('Pause execution for specified number of seconds');\r\n    }\r\n  },\r\n  'time_time': {\r\n    init: function() {\r\n      this.appendDummyInput()\r\n          .appendField('current time');\r\n      this.setOutput(true, 'Number');\r\n      this.setColour(230);\r\n      this.setTooltip('Get current time in seconds since epoch');\r\n    }\r\n  }\r\n};\r\n\r\n// Register blocks\r\nObject.keys(timeBlocks).forEach(blockType => {\r\n  Blockly.Blocks[blockType] = timeBlocks[blockType];\r\n});\r\n\r\n// Register Python generators\r\npythonGenerator['time_sleep'] = function(block) {\r\n  // Add import time to definitions\r\n  pythonGenerator.definitions_['import_time'] = 'import time';\r\n  \r\n  const seconds = pythonGenerator.valueToCode(block, 'SECONDS', pythonGenerator.ORDER_ATOMIC) || '0';\r\n  return `time.sleep(${seconds})\\n`;\r\n};\r\n\r\npythonGenerator['time_time'] = function(block) {\r\n  // Add import time to definitions\r\n  pythonGenerator.definitions_['import_time'] = 'import time';\r\n  \r\n  return ['time.time()', pythonGenerator.ORDER_FUNCTION_CALL];\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,cAAc,CAClC,MAAO,gBAAgB,CACvB,OAASC,eAAe,KAAQ,gBAAgB,CAEhD;AACA,KAAM,CAAAC,UAAU,CAAG,CACjB,YAAY,CAAE,CACZC,IAAI,CAAE,QAAAA,CAAA,CAAW,CACf,IAAI,CAACC,gBAAgB,CAAC,SAAS,CAAC,CAC3BC,QAAQ,CAAC,QAAQ,CAAC,CAClBC,WAAW,CAAC,WAAW,CAAC,CACxBA,WAAW,CAAC,SAAS,CAAC,CAC3B,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAAE,IAAI,CAAC,CACrC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAE,IAAI,CAAC,CACjC,IAAI,CAACC,SAAS,CAAC,GAAG,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,iDAAiD,CAAC,CACpE,CACF,CAAC,CACD,WAAW,CAAE,CACXP,IAAI,CAAE,QAAAA,CAAA,CAAW,CACf,IAAI,CAACQ,gBAAgB,CAAC,CAAC,CAClBL,WAAW,CAAC,cAAc,CAAC,CAChC,IAAI,CAACM,SAAS,CAAC,IAAI,CAAE,QAAQ,CAAC,CAC9B,IAAI,CAACH,SAAS,CAAC,GAAG,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,yCAAyC,CAAC,CAC5D,CACF,CACF,CAAC,CAED;AACAG,MAAM,CAACC,IAAI,CAACZ,UAAU,CAAC,CAACa,OAAO,CAACC,SAAS,EAAI,CAC3ChB,OAAO,CAACiB,MAAM,CAACD,SAAS,CAAC,CAAGd,UAAU,CAACc,SAAS,CAAC,CACnD,CAAC,CAAC,CAEF;AACAf,eAAe,CAAC,YAAY,CAAC,CAAG,SAASiB,KAAK,CAAE,CAC9C;AACAjB,eAAe,CAACkB,YAAY,CAAC,aAAa,CAAC,CAAG,aAAa,CAE3D,KAAM,CAAAC,OAAO,CAAGnB,eAAe,CAACoB,WAAW,CAACH,KAAK,CAAE,SAAS,CAAEjB,eAAe,CAACqB,YAAY,CAAC,EAAI,GAAG,CAClG,MAAO,cAAcF,OAAO,KAAK,CACnC,CAAC,CAEDnB,eAAe,CAAC,WAAW,CAAC,CAAG,SAASiB,KAAK,CAAE,CAC7C;AACAjB,eAAe,CAACkB,YAAY,CAAC,aAAa,CAAC,CAAG,aAAa,CAE3D,MAAO,CAAC,aAAa,CAAElB,eAAe,CAACsB,mBAAmB,CAAC,CAC7D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}