{"ast":null,"code":"import Blockly from'blockly/core';import'blockly/blocks';import{pythonGenerator}from'blockly/python';const Mutator=Blockly.Extensions.getMutator;Blockly.Blocks['arrays_create']={init:function(){this.setHelpUrl('');this.setColour(160);this.itemCount_=3;this.updateShape_();this.setOutput(true,'Array');this.setMutator(new Mutator(['arrays_create_item']));this.setTooltip('Create an array with any number of items');},mutationToDom:function(){var container=Blockly.utils.xml.createElement('mutation');container.setAttribute('items',this.itemCount_);return container;},domToMutation:function(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute('items'),10);this.updateShape_();},decompose:function(workspace){var containerBlock=workspace.newBlock('arrays_create_container');containerBlock.initSvg();var connection=containerBlock.getInput('STACK').connection;for(var i=0;i<this.itemCount_;i++){var itemBlock=workspace.newBlock('arrays_create_item');itemBlock.initSvg();connection.connect(itemBlock.previousConnection);connection=itemBlock.nextConnection;}return containerBlock;},compose:function(containerBlock){var itemBlock=containerBlock.getInputTargetBlock('STACK');var connections=[];while(itemBlock&&!itemBlock.isInsertionMarker()){connections.push(itemBlock.valueConnection_);itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();}this.itemCount_=connections.length;this.updateShape_();for(var i=0;i<this.itemCount_;i++){if(connections[i]){this.getInput('ADD'+i).connection.connect(connections[i]);}}},saveConnections:function(containerBlock){var itemBlock=containerBlock.getInputTargetBlock('STACK');var i=0;while(itemBlock){var input=this.getInput('ADD'+i);itemBlock.valueConnection_=input&&input.connection.targetConnection;i++;itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();}},updateShape_:function(){if(this.itemCount_&&this.getInput('EMPTY')){this.removeInput('EMPTY');}else if(!this.itemCount_&&!this.getInput('EMPTY')){this.appendDummyInput('EMPTY').appendField('create empty array');}// Add new inputs.\nfor(var i=0;i<this.itemCount_;i++){if(!this.getInput('ADD'+i)){var input=this.appendValueInput('ADD'+i).setAlign(Blockly.ALIGN_RIGHT).appendField(i===0?'create array with':'and');}}// Remove deleted inputs.\nwhile(this.getInput('ADD'+i)){this.removeInput('ADD'+i);i++;}}};Blockly.Blocks['arrays_create_container']={init:function(){this.setColour(160);this.appendDummyInput().appendField('array');this.appendStatementInput('STACK');this.setTooltip('Add, remove, or reorder sections to reconfigure this array block');this.contextMenu=false;}};Blockly.Blocks['arrays_create_item']={init:function(){this.setColour(160);this.appendDummyInput().appendField('item');this.setPreviousStatement(true);this.setNextStatement(true);this.setTooltip('Add an item to the array');this.contextMenu=false;}};pythonGenerator.forBlock['arrays_create']=function(block){var elements=[];for(var i=0;i<block.itemCount_;i++){var element=pythonGenerator.valueToCode(block,'ADD'+i,pythonGenerator.ORDER_NONE)||'None';elements.push(element);}var code='['+elements.join(', ')+']';return[code,pythonGenerator.ORDER_ATOMIC];};Blockly.Blocks['arrays_get']={init:function(){this.appendValueInput('ARRAY').setCheck(null).appendField('get element at index');this.appendValueInput('INDEX').setCheck('Number');this.setOutput(true,null);this.setColour(160);this.setTooltip('Get an element from the array at the specified index');}};pythonGenerator.forBlock['arrays_get']=function(block){const array=pythonGenerator.valueToCode(block,'ARRAY',pythonGenerator.ORDER_MEMBER)||'[]';const index=pythonGenerator.valueToCode(block,'INDEX',pythonGenerator.ORDER_ATOMIC)||'0';return[`${array}[${index}]`,pythonGenerator.ORDER_MEMBER];};Blockly.Blocks['arrays_set']={init:function(){this.appendValueInput('ARRAY').setCheck(null).appendField('set element at index');this.appendValueInput('INDEX').setCheck('Number');this.appendValueInput('VALUE').setCheck(null).appendField('to');this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(160);this.setTooltip('Set an element in the array at the specified index');}};pythonGenerator.forBlock['arrays_set']=function(block){const array=pythonGenerator.valueToCode(block,'ARRAY',pythonGenerator.ORDER_MEMBER)||'[]';const index=pythonGenerator.valueToCode(block,'INDEX',pythonGenerator.ORDER_ATOMIC)||'0';const value=pythonGenerator.valueToCode(block,'VALUE',pythonGenerator.ORDER_ATOMIC)||'None';return`${array}[${index}] = ${value}\\n`;};Blockly.Blocks['arrays_length']={init:function(){this.appendValueInput('ARRAY').setCheck(null).appendField('length of');this.setOutput(true,'Number');this.setColour(160);this.setTooltip('Get the length of the array');}};pythonGenerator.forBlock['arrays_length']=function(block){const array=pythonGenerator.valueToCode(block,'ARRAY',pythonGenerator.ORDER_MEMBER)||'[]';return[`len(${array})`,pythonGenerator.ORDER_FUNCTION_CALL];};","map":{"version":3,"names":["Blockly","pythonGenerator","Mutator","Extensions","getMutator","Blocks","init","setHelpUrl","setColour","itemCount_","updateShape_","setOutput","setMutator","setTooltip","mutationToDom","container","utils","xml","createElement","setAttribute","domToMutation","xmlElement","parseInt","getAttribute","decompose","workspace","containerBlock","newBlock","initSvg","connection","getInput","i","itemBlock","connect","previousConnection","nextConnection","compose","getInputTargetBlock","connections","isInsertionMarker","push","valueConnection_","targetBlock","length","saveConnections","input","targetConnection","removeInput","appendDummyInput","appendField","appendValueInput","setAlign","ALIGN_RIGHT","appendStatementInput","contextMenu","setPreviousStatement","setNextStatement","forBlock","block","elements","element","valueToCode","ORDER_NONE","code","join","ORDER_ATOMIC","setCheck","array","ORDER_MEMBER","index","value","ORDER_FUNCTION_CALL"],"sources":["C:/Users/ADMIN/OneDrive/Documents/university/grad/project/STEM_KIT_app/frontend/src/blocks/arrays_blocks.js"],"sourcesContent":["import Blockly from 'blockly/core';\r\nimport 'blockly/blocks';\r\nimport { pythonGenerator } from 'blockly/python';\r\n\r\nconst Mutator = Blockly.Extensions.getMutator;\r\n\r\nBlockly.Blocks['arrays_create'] = {\r\n  init: function() {\r\n    this.setHelpUrl('');\r\n    this.setColour(160);\r\n    this.itemCount_ = 3;\r\n    this.updateShape_();\r\n    this.setOutput(true, 'Array');\r\n    this.setMutator(new Mutator(['arrays_create_item']));\r\n    this.setTooltip('Create an array with any number of items');\r\n  },\r\n\r\n  mutationToDom: function() {\r\n    var container = Blockly.utils.xml.createElement('mutation');\r\n    container.setAttribute('items', this.itemCount_);\r\n    return container;\r\n  },\r\n\r\n  domToMutation: function(xmlElement) {\r\n    this.itemCount_ = parseInt(xmlElement.getAttribute('items'), 10);\r\n    this.updateShape_();\r\n  },\r\n\r\n  decompose: function(workspace) {\r\n    var containerBlock = workspace.newBlock('arrays_create_container');\r\n    containerBlock.initSvg();\r\n    var connection = containerBlock.getInput('STACK').connection;\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      var itemBlock = workspace.newBlock('arrays_create_item');\r\n      itemBlock.initSvg();\r\n      connection.connect(itemBlock.previousConnection);\r\n      connection = itemBlock.nextConnection;\r\n    }\r\n    return containerBlock;\r\n  },\r\n\r\n  compose: function(containerBlock) {\r\n    var itemBlock = containerBlock.getInputTargetBlock('STACK');\r\n    var connections = [];\r\n    while (itemBlock && !itemBlock.isInsertionMarker()) {\r\n      connections.push(itemBlock.valueConnection_);\r\n      itemBlock = itemBlock.nextConnection &&\r\n          itemBlock.nextConnection.targetBlock();\r\n    }\r\n    this.itemCount_ = connections.length;\r\n    this.updateShape_();\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      if (connections[i]) {\r\n        this.getInput('ADD' + i).connection.connect(connections[i]);\r\n      }\r\n    }\r\n  },\r\n\r\n  saveConnections: function(containerBlock) {\r\n    var itemBlock = containerBlock.getInputTargetBlock('STACK');\r\n    var i = 0;\r\n    while (itemBlock) {\r\n      var input = this.getInput('ADD' + i);\r\n      itemBlock.valueConnection_ = input && input.connection.targetConnection;\r\n      i++;\r\n      itemBlock = itemBlock.nextConnection &&\r\n          itemBlock.nextConnection.targetBlock();\r\n    }\r\n  },\r\n\r\n  updateShape_: function() {\r\n    if (this.itemCount_ && this.getInput('EMPTY')) {\r\n      this.removeInput('EMPTY');\r\n    } else if (!this.itemCount_ && !this.getInput('EMPTY')) {\r\n      this.appendDummyInput('EMPTY')\r\n          .appendField('create empty array');\r\n    }\r\n    // Add new inputs.\r\n    for (var i = 0; i < this.itemCount_; i++) {\r\n      if (!this.getInput('ADD' + i)) {\r\n        var input = this.appendValueInput('ADD' + i)\r\n            .setAlign(Blockly.ALIGN_RIGHT)\r\n            .appendField(i === 0 ? 'create array with' : 'and');\r\n      }\r\n    }\r\n    // Remove deleted inputs.\r\n    while (this.getInput('ADD' + i)) {\r\n      this.removeInput('ADD' + i);\r\n      i++;\r\n    }\r\n  }\r\n};\r\n\r\nBlockly.Blocks['arrays_create_container'] = {\r\n  init: function() {\r\n    this.setColour(160);\r\n    this.appendDummyInput()\r\n        .appendField('array');\r\n    this.appendStatementInput('STACK');\r\n    this.setTooltip('Add, remove, or reorder sections to reconfigure this array block');\r\n    this.contextMenu = false;\r\n  }\r\n};\r\n\r\nBlockly.Blocks['arrays_create_item'] = {\r\n  init: function() {\r\n    this.setColour(160);\r\n    this.appendDummyInput()\r\n        .appendField('item');\r\n    this.setPreviousStatement(true);\r\n    this.setNextStatement(true);\r\n    this.setTooltip('Add an item to the array');\r\n    this.contextMenu = false;\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['arrays_create'] = function(block) {\r\n  var elements = [];\r\n  for (var i = 0; i < block.itemCount_; i++) {\r\n    var element = pythonGenerator.valueToCode(block, 'ADD' + i,\r\n        pythonGenerator.ORDER_NONE) || 'None';\r\n    elements.push(element);\r\n  }\r\n  var code = '[' + elements.join(', ') + ']';\r\n  return [code, pythonGenerator.ORDER_ATOMIC];\r\n};\r\n\r\nBlockly.Blocks['arrays_get'] = {\r\n  init: function() {\r\n    this.appendValueInput('ARRAY')\r\n        .setCheck(null)\r\n        .appendField('get element at index');\r\n    this.appendValueInput('INDEX')\r\n        .setCheck('Number');\r\n    this.setOutput(true, null);\r\n    this.setColour(160);\r\n    this.setTooltip('Get an element from the array at the specified index');\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['arrays_get'] = function(block) {\r\n  const array = pythonGenerator.valueToCode(block, 'ARRAY', pythonGenerator.ORDER_MEMBER) || '[]';\r\n  const index = pythonGenerator.valueToCode(block, 'INDEX', pythonGenerator.ORDER_ATOMIC) || '0';\r\n  return [`${array}[${index}]`, pythonGenerator.ORDER_MEMBER];\r\n};\r\n\r\nBlockly.Blocks['arrays_set'] = {\r\n  init: function() {\r\n    this.appendValueInput('ARRAY')\r\n        .setCheck(null)\r\n        .appendField('set element at index');\r\n    this.appendValueInput('INDEX')\r\n        .setCheck('Number');\r\n    this.appendValueInput('VALUE')\r\n        .setCheck(null)\r\n        .appendField('to');\r\n    this.setPreviousStatement(true, null);\r\n    this.setNextStatement(true, null);\r\n    this.setColour(160);\r\n    this.setTooltip('Set an element in the array at the specified index');\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['arrays_set'] = function(block) {\r\n  const array = pythonGenerator.valueToCode(block, 'ARRAY', pythonGenerator.ORDER_MEMBER) || '[]';\r\n  const index = pythonGenerator.valueToCode(block, 'INDEX', pythonGenerator.ORDER_ATOMIC) || '0';\r\n  const value = pythonGenerator.valueToCode(block, 'VALUE', pythonGenerator.ORDER_ATOMIC) || 'None';\r\n  return `${array}[${index}] = ${value}\\n`;\r\n};\r\n\r\nBlockly.Blocks['arrays_length'] = {\r\n  init: function() {\r\n    this.appendValueInput('ARRAY')\r\n        .setCheck(null)\r\n        .appendField('length of');\r\n    this.setOutput(true, 'Number');\r\n    this.setColour(160);\r\n    this.setTooltip('Get the length of the array');\r\n  }\r\n};\r\n\r\npythonGenerator.forBlock['arrays_length'] = function(block) {\r\n  const array = pythonGenerator.valueToCode(block, 'ARRAY', pythonGenerator.ORDER_MEMBER) || '[]';\r\n  return [`len(${array})`, pythonGenerator.ORDER_FUNCTION_CALL];\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}